{"ast":null,"code":"var _jsxFileName = \"/Users/liuyuxin/Desktop/weather-app-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n\n    fetchData();\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: typeof data.main != 'undefined' ? /*#__PURE__*/_jsxDEV(Weather, {\n      weatherData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: true,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gE/fZZ7pzRi/f0KiE3Gj1Ld/pxs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/liuyuxin/Desktop/weather-app-main/src/App.js"],"names":["React","useEffect","useState","Weather","Dimmer","Loader","App","lat","setLat","long","setLong","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","then","res","json","result","console","log","main"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,YAAY;AAC5BC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AAC3DT,QAAAA,MAAM,CAACS,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAT,QAAAA,OAAO,CAACO,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAP;AACD,OAHD;AAKA,YAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAgBjB,GAAI,QAAOE,IAAK,uBAAsBa,OAAO,CAACC,GAAR,CAAYE,iBAAkB,EAAtH,CAAL,CACHC,IADG,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAEHF,IAFG,CAEEG,MAAM,IAAI;AACdjB,QAAAA,OAAO,CAACiB,MAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OALG,CAAN;AAMD,KAZD;;AAaAhB,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACN,GAAD,EAAME,IAAN,CAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACI,OAAOE,IAAI,CAACqB,IAAZ,IAAoB,WAArB,gBACC,QAAC,OAAD;AAAS,MAAA,WAAW,EAAErB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArCuBL,G;;KAAAA,G","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Weather from './components/Weather';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nexport default function App() {\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      \n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          setData(result)\n          console.log(result);\n        });\n    }\n    fetchData();\n  }, [lat, long])\n\n  return (\n    <div className=\"App\">\n      {(typeof data.main != 'undefined') ? (\n        <Weather weatherData={data} />\n      ) : (\n        <div>\n          <Dimmer active>\n            <Loader>Loading..</Loader>\n          </Dimmer>\n        </div>\n      )}\n    </div>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}